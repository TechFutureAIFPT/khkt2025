import React from 'react';
import type { AnalysisRunData, Candidate } from '../../types';

// Mock data for testing
const mockAnalysisData: AnalysisRunData = {
  timestamp: Date.now(),
  job: {
    position: 'Senior Frontend Developer',
    locationRequirement: 'H√† N·ªôi ho·∫∑c Remote',
  },
  candidates: [
    {
      id: 'cand_1',
      candidateName: 'Nguy·ªÖn VƒÉn A',
      fileName: 'cv_nguyen_van_a.pdf',
      phone: '0912345678',
      email: 'nguyenvana@example.com',
      jobTitle: 'Frontend Developer',
      industry: 'C√¥ng ngh·ªá th√¥ng tin',
      department: 'Engineering',
      experienceLevel: 'Senior',
      detectedLocation: 'H√† N·ªôi',
      status: 'SUCCESS' as const,
      analysis: {
        'T·ªïng ƒëi·ªÉm': 85,
        'H·∫°ng': 'A' as const,
        'Chi ti·∫øt': [
          {
            'Ti√™u ch√≠': 'Ph√π h·ª£p JD',
            'ƒêi·ªÉm': '14/15',
            'C√¥ng th·ª©c': 'subscore 14/15% = 14 points',
            'D·∫´n ch·ª©ng': 'C√≥ 5+ nƒÉm kinh nghi·ªám React, TypeScript',
            'Gi·∫£i th√≠ch': 'R·∫•t ph√π h·ª£p v·ªõi y√™u c·∫ßu k·ªπ thu·∫≠t'
          },
          {
            'Ti√™u ch√≠': 'Kinh nghi·ªám',
            'ƒêi·ªÉm': '18/20',
            'C√¥ng th·ª©c': 'subscore 18/20% = 18 points',
            'D·∫´n ch·ª©ng': '6 nƒÉm kinh nghi·ªám frontend, t·ª´ng l√†m ·ªü startup v√† enterprise',
            'Gi·∫£i th√≠ch': 'Kinh nghi·ªám ƒëa d·∫°ng v√† phong ph√∫'
          }
        ],
        'ƒêi·ªÉm m·∫°nh CV': [
          'Th√†nh th·∫°o React, TypeScript, Next.js',
          'Kinh nghi·ªám l√†m vi·ªác v·ªõi team l·ªõn',
          'C√≥ portfolio ·∫•n t∆∞·ª£ng tr√™n GitHub',
          'Tham gia open source projects'
        ],
        'ƒêi·ªÉm y·∫øu CV': [
          'Thi·∫øu kinh nghi·ªám testing (Jest, Cypress)',
          'Ch∆∞a c√≥ experience v·ªõi backend technologies',
          'Thi·∫øu ch·ª©ng ch·ªâ ho·∫∑c course ch√≠nh th·ª©c'
        ]
      }
    },
    {
      id: 'cand_2',
      candidateName: 'Tr·∫ßn Th·ªã B',
      fileName: 'cv_tran_thi_b.pdf',
      phone: '0987654321',
      email: 'tranthib@example.com',
      jobTitle: 'Full Stack Developer',
      industry: 'C√¥ng ngh·ªá th√¥ng tin',
      department: 'Engineering',
      experienceLevel: 'Mid-level',
      detectedLocation: 'TP.HCM',
      status: 'SUCCESS' as const,
      analysis: {
        'T·ªïng ƒëi·ªÉm': 78,
        'H·∫°ng': 'A' as const,
        'Chi ti·∫øt': [
          {
            'Ti√™u ch√≠': 'Ph√π h·ª£p JD',
            'ƒêi·ªÉm': '12/15',
            'C√¥ng th·ª©c': 'subscore 12/15% = 12 points',
            'D·∫´n ch·ª©ng': 'C√≥ kinh nghi·ªám Vue.js, ƒëang h·ªçc React',
            'Gi·∫£i th√≠ch': 'C·∫ßn th·ªùi gian transition t·ª´ Vue sang React'
          }
        ],
        'ƒêi·ªÉm m·∫°nh CV': [
          'Full-stack experience (Vue + Node.js)',
          'Kinh nghi·ªám v·ªõi databases (MySQL, MongoDB)',
          'C√≥ kinh nghi·ªám deploy v√† DevOps c∆° b·∫£n',
          'Communication skills t·ªët'
        ],
        'ƒêi·ªÉm y·∫øu CV': [
          'Ch∆∞a th√†nh th·∫°o React ecosystem',
          'Thi·∫øu kinh nghi·ªám v·ªõi TypeScript',
          'Portfolio ch∆∞a ƒëa d·∫°ng'
        ]
      }
    }
  ]
};

const InterviewQuestionDemo: React.FC = () => {
  const [selectedDemo, setSelectedDemo] = React.useState<'general' | 'specific' | 'comparative'>('general');

  const demoQuestions = {
    general: [
      {
        category: 'C√¢u h·ªèi k·ªπ thu·∫≠t c·ªët l√µi',
        icon: 'fa-solid fa-code',
        color: 'text-blue-400',
        questions: [
          'B·∫°n approach m·ªôt d·ª± √°n React m·ªõi v·ªõi y√™u c·∫ßu ph·ª©c t·∫°p nh∆∞ th·∫ø n√†o?',
          'M√¥ t·∫£ m·ªôt performance issue trong React app m√† b·∫°n ƒë√£ optimize.',
          'Kinh nghi·ªám c·ªßa b·∫°n v·ªõi state management (Redux, Context, Zustand)?',
          'C√°ch b·∫°n handle async operations v√† error boundaries?',
          'Component architecture v√† design patterns b·∫°n th∆∞·ªùng s·ª≠ d·ª•ng?'
        ]
      },
      {
        category: 'ƒêi·ªÉm y·∫øu ph·ªï bi·∫øn c·∫ßn ki·ªÉm tra',
        icon: 'fa-solid fa-exclamation-triangle',
        color: 'text-orange-400',
        questions: [
          'Nhi·ªÅu ·ª©ng vi√™n y·∫øu v·ªÅ testing. B·∫°n test React components nh∆∞ th·∫ø n√†o?',
          'Backend experience h·∫°n ch·∫ø. B·∫°n l√†m vi·ªác v·ªõi APIs ra sao?',
          'Thi·∫øu ch·ª©ng ch·ªâ. B·∫°n update ki·∫øn th·ª©c qua k√™nh n√†o?',
          'Deployment experience. B·∫°n ƒë√£ deploy app l√™n production ch∆∞a?'
        ]
      },
      {
        category: 'T√¨nh hu·ªëng th·ª±c t·∫ø',
        icon: 'fa-solid fa-users',
        color: 'text-green-400',
        questions: [
          'Client y√™u c·∫ßu thay ƒë·ªïi major feature 1 tu·∫ßn tr∆∞·ªõc deadline. B·∫°n x·ª≠ l√Ω sao?',
          'Conflict trong team v·ªÅ technical approach. B·∫°n gi·∫£i quy·∫øt nh∆∞ th·∫ø n√†o?',
          'Legacy codebase kh√≥ maintain. Strategy c·ªßa b·∫°n ƒë·ªÉ refactor?',
          'Onboard junior developer m·ªõi. B·∫°n mentor h·ªç ra sao?'
        ]
      }
    ],
    specific: [
      {
        category: 'X√°c nh·∫≠n ƒëi·ªÉm m·∫°nh - Nguy·ªÖn VƒÉn A',
        icon: 'fa-solid fa-star',
        color: 'text-yellow-400',
        questions: [
          'B·∫°n ƒë√£ build React app ph·ª©c t·∫°p n√†o v·ªõi TypeScript? Challenges g√¨?',
          'GitHub portfolio c·ªßa b·∫°n: D·ª± √°n n√†o b·∫°n t·ª± h√†o nh·∫•t v√† t·∫°i sao?',
          'Open source contributions: Motivations v√† benefits b·∫°n nh·∫≠n ƒë∆∞·ª£c?',
          'Experience v·ªõi Next.js: SSR/SSG n√†o fit cho use cases n√†o?',
          'Team collaboration: B·∫°n handle code review v√† knowledge sharing sao?'
        ]
      },
      {
        category: 'Th√°ch th·ª©c ƒëi·ªÉm y·∫øu - Testing & Backend',
        icon: 'fa-solid fa-bug',
        color: 'text-red-400',
        questions: [
          'B·∫°n approach testing cho React components ra sao? Unit vs Integration?',
          'Experience v·ªõi Jest, React Testing Library? V√≠ d·ª• test case ph·ª©c t·∫°p?',
          'E2E testing: B·∫°n c√≥ d√πng Cypress hay Playwright kh√¥ng?',
          'Backend APIs: B·∫°n l√†m vi·ªác v·ªõi REST/GraphQL nh∆∞ th·∫ø n√†o?',
          'Learning plan: B·∫°n c√≥ k·∫ø ho·∫°ch improve backend skills kh√¥ng?'
        ]
      }
    ],
    comparative: [
      {
        category: 'So s√°nh technical depth',
        icon: 'fa-solid fa-balance-scale',
        color: 'text-purple-400',
        questions: [
          '·ª®ng vi√™n A strong v·ªÅ React, B strong v·ªÅ full-stack. V·ªã tr√≠ n√†y c·∫ßn g√¨ h∆°n?',
          'A c√≥ GitHub portfolio, B c√≥ real-world products. ƒê√¢u valuable h∆°n?',
          'A Senior experience, B Mid-level nh∆∞ng versatile. Trade-off g√¨?',
          'Testing: A y·∫øu nh∆∞ng c√≥ th·ªÉ h·ªçc, B c√≥ foundation. ∆Øu ti√™n sao?'
        ]
      },
      {
        category: 'ƒê√°nh gi√° cultural fit',
        icon: 'fa-solid fa-heart',
        color: 'text-pink-400',
        questions: [
          'A t·ª´ startup, B t·ª´ enterprise. Culture n√†o fit team hi·ªán t·∫°i?',
          'A open source contributor, B product-focused. Mindset n√†o ph√π h·ª£p?',
          'Remote work: A ·ªü H√† N·ªôi, B ·ªü TPHCM. Communication style kh√°c g√¨?',
          'Growth potential: A deep specialist, B broad generalist. Team c·∫ßn g√¨?'
        ]
      }
    ]
  };

  return (
    <div className="max-w-6xl mx-auto p-6 bg-slate-900 text-white min-h-screen">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-center mb-4 bg-gradient-to-r from-purple-400 to-blue-400 text-transparent bg-clip-text">
          üéØ Demo: G·ª£i √Ω C√¢u h·ªèi Ph·ªèng v·∫•n AI
        </h1>
        <p className="text-slate-400 text-center max-w-2xl mx-auto">
          Xem tr∆∞·ªõc c√°c c√¢u h·ªèi th√¥ng minh ƒë∆∞·ª£c t·∫°o d·ª±a tr√™n JD v√† d·ªØ li·ªáu l·ªçc CV th·ª±c t·∫ø
        </p>
      </div>

      {/* Mock Job Info */}
      <div className="bg-slate-800/50 rounded-xl p-6 mb-8 border border-slate-700">
        <h2 className="text-xl font-bold mb-4 flex items-center gap-2">
          <i className="fa-solid fa-briefcase text-blue-400"></i>
          Th√¥ng tin tuy·ªÉn d·ª•ng (Demo)
        </h2>
        <div className="grid md:grid-cols-3 gap-4">
          <div>
            <div className="text-slate-400 text-sm">V·ªã tr√≠</div>
            <div className="font-semibold">{mockAnalysisData.job.position}</div>
          </div>
          <div>
            <div className="text-slate-400 text-sm">ƒê·ªãa ƒëi·ªÉm</div>
            <div className="font-semibold">{mockAnalysisData.job.locationRequirement}</div>
          </div>
          <div>
            <div className="text-slate-400 text-sm">·ª®ng vi√™n h·∫°ng A</div>
            <div className="font-semibold text-green-400">2 ·ª©ng vi√™n</div>
          </div>
        </div>
      </div>

      {/* Type Selection */}
      <div className="mb-8">
        <h2 className="text-xl font-bold mb-4">Ch·ªçn lo·∫°i c√¢u h·ªèi demo:</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button
            onClick={() => setSelectedDemo('general')}
            className={`p-4 rounded-xl border transition-all ${
              selectedDemo === 'general'
                ? 'border-purple-500 bg-purple-900/20 text-purple-300'
                : 'border-slate-600 bg-slate-700/30 text-slate-300 hover:border-slate-500'
            }`}
          >
            <i className="fa-solid fa-users text-xl mb-2 block"></i>
            <div className="font-semibold">C√¢u h·ªèi chung</div>
            <div className="text-sm opacity-80">D·ª±a tr√™n JD v√† xu h∆∞·ªõng</div>
          </button>

          <button
            onClick={() => setSelectedDemo('specific')}
            className={`p-4 rounded-xl border transition-all ${
              selectedDemo === 'specific'
                ? 'border-green-500 bg-green-900/20 text-green-300'
                : 'border-slate-600 bg-slate-700/30 text-slate-300 hover:border-slate-500'
            }`}
          >
            <i className="fa-solid fa-user text-xl mb-2 block"></i>
            <div className="font-semibold">C√¢u h·ªèi c·ª• th·ªÉ</div>
            <div className="text-sm opacity-80">Cho Nguy·ªÖn VƒÉn A</div>
          </button>

          <button
            onClick={() => setSelectedDemo('comparative')}
            className={`p-4 rounded-xl border transition-all ${
              selectedDemo === 'comparative'
                ? 'border-orange-500 bg-orange-900/20 text-orange-300'
                : 'border-slate-600 bg-slate-700/30 text-slate-300 hover:border-slate-500'
            }`}
          >
            <i className="fa-solid fa-balance-scale text-xl mb-2 block"></i>
            <div className="font-semibold">So s√°nh ·ª©ng vi√™n</div>
            <div className="text-sm opacity-80">A vs B comparison</div>
          </button>
        </div>
      </div>

      {/* Demo Questions */}
      <div className="space-y-6">
        <h2 className="text-xl font-bold flex items-center gap-2">
          <i className="fa-solid fa-magic text-yellow-400"></i>
          C√¢u h·ªèi ƒë∆∞·ª£c t·∫°o b·ªüi AI
        </h2>
        
        {demoQuestions[selectedDemo].map((set, index) => (
          <div key={index} className="bg-slate-800/60 rounded-xl border border-slate-700">
            <div className="p-4 border-b border-slate-700">
              <h3 className={`text-lg font-semibold ${set.color} flex items-center gap-2`}>
                <i className={set.icon}></i>
                {set.category}
              </h3>
            </div>
            <div className="p-4">
              <div className="space-y-3">
                {set.questions.map((question, qIndex) => (
                  <div key={qIndex} className="flex items-start gap-3 p-3 bg-slate-700/30 rounded-lg hover:bg-slate-700/50 transition-colors">
                    <div className={`w-6 h-6 rounded-full ${set.color.replace('text-', 'bg-').replace('400', '500')} flex items-center justify-center text-white text-xs font-bold flex-shrink-0 mt-0.5`}>
                      {qIndex + 1}
                    </div>
                    <p className="text-slate-200 leading-relaxed">{question}</p>
                    <button
                      onClick={() => navigator.clipboard.writeText(question)}
                      className="text-slate-400 hover:text-white transition-colors p-1 flex-shrink-0"
                      title="Copy c√¢u h·ªèi"
                    >
                      <i className="fa-solid fa-copy"></i>
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Usage Info */}
      <div className="mt-12 bg-gradient-to-r from-blue-900/20 to-purple-900/20 rounded-xl p-6 border border-blue-700/30">
        <h3 className="text-lg font-bold mb-3 flex items-center gap-2">
          <i className="fa-solid fa-info-circle text-blue-400"></i>
          C√°ch s·ª≠ d·ª•ng trong ·ª©ng d·ª•ng th·ª±c t·∫ø
        </h3>
        <div className="grid md:grid-cols-2 gap-6 text-sm">
          <div>
            <h4 className="font-semibold text-blue-300 mb-2">T·ª´ Dashboard:</h4>
            <ul className="space-y-1 text-slate-300">
              <li>‚Ä¢ Click n√∫t "G·ª£i √Ω c√¢u h·ªèi PV" (m√†u t√≠m)</li>
              <li>‚Ä¢ Ch·ªçn lo·∫°i c√¢u h·ªèi ph√π h·ª£p</li>
              <li>‚Ä¢ AI t·∫°o c√¢u h·ªèi d·ª±a tr√™n d·ªØ li·ªáu th·ª±c</li>
              <li>‚Ä¢ Copy v√† s·ª≠ d·ª•ng trong ph·ªèng v·∫•n</li>
            </ul>
          </div>
          <div>
            <h4 className="font-semibold text-purple-300 mb-2">T·ª´ Chatbot:</h4>
            <ul className="space-y-1 text-slate-300">
              <li>‚Ä¢ S·ª≠ d·ª•ng quick buttons cho c√¢u h·ªèi nhanh</li>
              <li>‚Ä¢ Chat t·ª± do: "G·ª£i √Ω c√¢u h·ªèi cho Developer"</li>
              <li>‚Ä¢ AI ph√¢n t√≠ch context v√† ƒë∆∞a ra g·ª£i √Ω</li>
              <li>‚Ä¢ T∆∞∆°ng t√°c linh ho·∫°t theo nhu c·∫ßu</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default InterviewQuestionDemo;